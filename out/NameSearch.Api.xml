<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NameSearch.Api</name>
    </assembly>
    <members>
        <member name="M:NameSearch.Api.Controllers.NameSearchController.IndexAsync(System.Collections.Generic.IEnumerable{NameSearch.Domain.Entities.PersonRecord})">
            <summary>
            Indexes a collection of person records. Each record is augmented with nickname and phonetic
            metadata and stored in Meilisearch. Returns the number of records indexed.
            </summary>
            <param name="records">A list of person records to index.</param>
        </member>
        <member name="M:NameSearch.Api.Controllers.NameSearchController.SearchAsync(System.String,System.Int32)">
            <summary>
            Searches for people by name. The query is expanded using nickname lookup, and phonetic and fuzzy
            matching are applied when querying Meilisearch. Returns a list of matches with scores.
            </summary>
            <param name="query">The search query, typically a person name.</param>
            <param name="limit">Maximum number of results to return (default 10).</param>
        </member>
        <member name="M:NameSearch.Api.Controllers.NameSearchController.Example">
            <summary>
            Example endpoint returning a sample PersonRecord. Useful for debugging the basic model contract.
            </summary>
        </member>
    </members>
</doc>
